{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","error","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snap","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailAndPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpLoading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAutenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b54fd128.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nexport const types =  {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesFiledUrl: '[Notes] Update image url',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCAPCe57m2kwnxhGhOoHDj1MYelYdcYVVg\",\r\n    authDomain: \"react-app-fd28a.firebaseapp.com\",\r\n    projectId: \"react-app-fd28a\",\r\n    storageBucket: \"react-app-fd28a.appspot.com\",\r\n    messagingSenderId: \"943378561236\",\r\n    appId: \"1:943378561236:web:12d3d0f8853145dc3c6341\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = ( error ) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n    \r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\n\r\n// 2. Crear dos acciones que modifiquen nuestro state en el uiReducer (no reciben argumentos)\r\n//     Esas acciones tendrán el nombre de startLoading y finishLoading respectivamente\r\n\r\n//     uiStartLoading: debe de colocar la propiedad loading en true\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n//     uiFinishLoading: debe de colocar la propiedad loading en false\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach( snap => {\r\n        notes.push({\r\n            id: snap.id,\r\n            ...snap.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n}\r\n","export const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/drc22rxy7/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json()\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { id } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${id}/journal/notes`).add(newNote)\r\n        dispatch(activeNote( doc.id, newNote))\r\n        dispatch(addNewNote( doc.id, newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes(notes))\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { id } = getState().auth\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n            \r\n        }\r\n\r\n        const noteToFirestore = {...note}\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${id}/journal/notes/${note.id}`).update(noteToFirestore)\r\n\r\n        dispatch(refreshNote( note.id, noteToFirestore))\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUpLoading = ( file ) => {\r\n\r\n    return async ( dispatch , getState ) => {\r\n        const {active:activeNote} = getState().notes\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl\r\n        dispatch( startSaveNote(activeNote))\r\n        Swal.close()\r\n    }\r\n \r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState) => {\r\n        const uid = getState().auth.id;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id))\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    \r\n    type: types.notesLogoutCleaning\r\n\r\n})","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\"\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    \r\n    return (dispatch) => {\r\n        dispatch(\r\n            startLoading()\r\n        )\r\n        firebase.auth().signInWithEmailAndPassword( email, password)\r\n            .then( ({ user })  => {\r\n                dispatch(\r\n                    finishLoading()\r\n                )\r\n                dispatch(\r\n                    login( user.id, user.displayName)\r\n                )\r\n            })\r\n            .catch( e => {\r\n                \r\n                dispatch(\r\n                    finishLoading()\r\n                );\r\n                Swal.fire('Fail', e.message, 'error')\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailAndPasswordName = (email, password, name) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async({ user })  => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(\r\n                    login( user.id, user.displayName)\r\n                )\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Fail', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) => {\r\n                console.log({user})\r\n                dispatch(\r\n                    login( user.id, user.displayName)\r\n                )\r\n            })\r\n            .catch( e => {\r\n                console.log(e)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n         \r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const {loading} = useSelector( state => state.ui)\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    })\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        dispatch(startLoginEmailPassword(email, password))\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin())\n    }\n    \n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={ handleLogin }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\"\n                onClick={handleGoogleLogin}\n                >\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { setError, removeError } from '../../actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startRegisterWithEmailAndPasswordName } from '../../actions/auth';\n\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch()\n    const { ui:{msgError} } = useSelector( state => state);\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if ( isFormValid()) {\n            dispatch( startRegisterWithEmailAndPasswordName(email, password, name) )\n        }\n    }\n\n    const isFormValid = () => {\n        if ( name.trim().length === 0) {\n            \n            return dispatch(setError('Name is required'))\n            // return false;\n        } else if ( !validator.isEmail( email) ) {\n            return dispatch(setError('Email isnt valid'))\n            // return false;\n        } else if ( password !== password2 || password.length < 5) {\n            return dispatch(setError('Password should be at least 6 characters and match each other'))\n            // return false;\n        }\n\n        dispatch(removeError())\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n                onSubmit={ handleRegister }\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n                { \n                msgError &&\n                    (<div className=\"auth__alert-error\">\n                    {msgError}\n                    </div>)\n                }\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const dispatch = useDispatch()\n    const noteDate = moment(date)\n\n    const handleEntryClick = () => {\n        dispatch(activeNote( id, {\n            date, title, body, url\n        }))\n    }\n\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" \n        onClick={ handleEntryClick }>\n            \n            \n            {   url &&\n                <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: `url(${url})`\n                }}\n            ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd')}</span>\n                <h4>{ noteDate.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\nimport { useSelector } from 'react-redux';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes) \n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry\n                    key={ note.id }\n                    {...note}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\n\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n    const handleAddNew = () => {\n        dispatch(startNewNote())\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span>{name}</span>\n                </h3>\n\n                <button className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div\n                className=\"journal__new-entry\"\n                onClick={handleAddNew}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { startSaveNote, startUpLoading } from '../../actions/notes'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active)) \n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click()\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0]\n        if ( file ) {\n            dispatch(startUpLoading( file ))\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{display: 'none'}}\n                onChange={ handleFileChange\n                 }\n            />\n            <div>\n                <button \n                    onClick={ handlePictureClick }\n                    className=\"btn\"\n                >\n                    Picture\n                </button>\n\n                <button\n                    onClick={ handleSave }\n                    className=\"btn\"\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useForm } from '../../hooks/useForm'\nimport { activeNote, startDeleting } from '../../actions/notes'\n\nexport const NoteScreen = () => {\n\n    const { active: note } = useSelector(state => state.notes)\n    const [formValues, handleInputChange, reset ] = useForm(note)\n    const { body, title, id } = formValues\n\n    const activeId = useRef( note.id ) \n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if ( note.id !== activeId.current ) {\n            reset(note)\n            activeId.current = note.id\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n       \n        dispatch(activeNote( formValues.id, {...formValues}))\n\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch( startDeleting(id))\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                name=\"body\"\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {note.url &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={note.url}\n                            alt=\"imagen\"\n                        />\n                    </div>}\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={ handleDelete }\n                >\n                    Delete\n                </button>\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                or create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n\n            <Sidebar />\n\n\n            <main>\n                {\n                    (active)\n                        ? <NoteScreen />\n                        : <NothingSelected />\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ ( props ) => (\r\n                (isAutenticated)\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/auth/login\" />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ ( props ) => (\r\n                (isAutenticated)\r\n                ? <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n\n\n    const dispatch = useDispatch();\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged( async(user) => {\n\n            if ( user?.uid) {\n                dispatch(login( user.uid, user.displayName))\n                setIsLoggedIn(true)\n                dispatch( startLoadingNotes( user.uid ))\n            } else {\n                setIsLoggedIn(false)\n            }\n\n            setChecking(false)\n\n        })\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if (checking) {\n        return (\n            <h1>Wait a minute...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        isAutenticated={ isLoggedIn }\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                    />\n\n                    <PrivateRoute\n                        isAutenticated={ isLoggedIn }\n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state= initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'sfsdfegwegwegweefwef',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 1235465642\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad: \r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"; \r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\n/*\r\n{\r\n    uid: jkfnsjkdfnlsdfnk,\r\n    name: 'Daniela'\r\n}\r\n*/\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                id: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n        )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}